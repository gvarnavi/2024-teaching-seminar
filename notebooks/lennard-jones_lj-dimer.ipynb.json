{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "49c045f3-b71a-4fcb-89b0-8946e94d424b",
   "metadata": {},
   "outputs": [],
   "source": [
    "diatomicKineticEnergy = Sum[1/2 m[i] D[q[i][t], t]^2, {i, 2}];\n",
    "\n",
    "lennardJonesPotentialNonDimensional[ρ_]=1/ρ^12 - 2/ρ^6;\n",
    "diatomicPotentialEnergy[\"lj\"] = lennardJonesPotentialNonDimensional[q[2][t] - q[1][t]];\n",
    "\n",
    "diatomicLagrangian = diatomicKineticEnergy - diatomicPotentialEnergy[\"lj\"];\n",
    "diatomicHamiltonian = diatomicKineticEnergy + diatomicPotentialEnergy[\"lj\"];\n",
    "\n",
    "diatomicCanonicalSubstitutions = First[\n",
    "  Solve[{\n",
    "    p[1][t] == D[diatomicLagrangian, q[1]'[t]],\n",
    "    p[2][t] == D[diatomicLagrangian, q[2]'[t]]\n",
    "    }, {q[1]'[t], q[2]'[t]}]\n",
    "];"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "aa08dca7-2a5a-48f6-91f8-e3861bc682a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "diatomicCanonicalHamiltonianLJ = diatomicHamiltonian /. diatomicCanonicalSubstitutions;\n",
    "\n",
    "diatomicHamiltonsEquationsLJ = {\n",
    " D[q[1][t], t] == D[diatomicCanonicalHamiltonianLJ, p[1][t]],\n",
    " D[q[2][t], t] == D[diatomicCanonicalHamiltonianLJ, p[2][t]],\n",
    " D[p[1][t], t] == -D[diatomicCanonicalHamiltonianLJ, q[1][t]],\n",
    " D[p[2][t], t] == -D[diatomicCanonicalHamiltonianLJ, q[2][t]]\n",
    "};"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6543d5b4-5e0d-4f21-b584-4ce2b9a66083",
   "metadata": {},
   "source": [
    "- The equations of motion can no-longer be solved analytically\n",
    "  - so we proceed numerically"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "982fdff0-3c80-4573-bce9-83f814b84673",
   "metadata": {},
   "outputs": [],
   "source": [
    "diatomicInitialConditions = {\n",
    "  q[1][0] == -5/8, q[2][0] == 5/8, \n",
    "  p[1][0] == 0, p[2][0] == 0\n",
    "};\n",
    "\n",
    "diatomicMoleculeSolutionsLJ = ParametricNDSolveValue[\n",
    "   Join[diatomicHamiltonsEquationsLJ, \n",
    "    diatomicInitialConditions], {q[1], q[2], p[1], p[2]},\n",
    "   {t, 0, 1}, {m[1], m[2]}\n",
    "];"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ebbb944-a6f9-4dab-8956-45f6d09fe9dc",
   "metadata": {},
   "source": [
    "- Finally, let's visualize our Lennard Jones dimer!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "22031042-9653-4c8c-a51f-2cdc8114d736",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    }
   },
   "outputs": [],
   "source": [
    "spring[start_ : {0, 0}, end_ : {1, 0}, n_ : 20, w_ : .2] := \n",
    " With[{vector = end - start}, \n",
    "  BSplineCurve@(start + # & /@ \n",
    "       Transpose[{vector, -Cross[vector]} . {(# - 1)/(2 n), \n",
    "          Re[I^#] w/Norm[vector]}] &@Range[2 n + 1])]\n",
    "\n",
    "visualizeDiatomicMolecule[{x1_, x2_}, {m1_, m2_}, colors_ : {Red, Blue}][t_] := \n",
    " Graphics[{\n",
    "  spring[{x1[t] + Sqrt[m1], 0}, {x2[t] - Sqrt[m2], 0}],\n",
    "  colors[[1]], Disk[{x1[t], 0}, Sqrt[m1]], colors[[2]], Disk[{x2[t], 0}, Sqrt[m2]]\n",
    "  }, PlotRange -> {{-1.1, 1.1}, {-1/4, 1/4}}, Axes -> True, Ticks -> None, ImageSize -> 350]\n",
    "\n",
    "baseLJGraphic = \n",
    "  Plot[lennardJonesPotentialNonDimensional[ρ], {ρ, 3/4, \n",
    "    3/2}, PlotStyle -> Directive[Blue, Thick], Frame -> True, \n",
    "   FrameStyle -> Directive[Black, Thick], \n",
    "   FrameLabel -> {\"Normalized separation distance\", \n",
    "     \"Potential Energy\"}, BaseStyle -> 14, ImageSize -> 350, \n",
    "   GridLines -> {{1}, None}];\n",
    "\n",
    "visualizeDiatomicMoleculePlusPotentialLJ[{x1_, x2_}, {m1_, m2_}, colors_ : {Red, Blue}][t_] := \n",
    " Block[{distance = x2[t] - x1[t]}, \n",
    "  Show[baseLJGraphic, \n",
    "   Graphics[{PointSize[0.0375], \n",
    "     Point[{distance, lennardJonesPotentialNonDimensional[distance]}],\n",
    "      Inset[visualizeDiatomicMolecule[{x1, x2}, {m1, m2}, colors][\n",
    "       t], {1.25, 1.5}, {0, 0}, 0.5]}]]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "b262073b-02bb-44d6-99de-a2f2a286037c",
   "metadata": {
    "jupyter": {
     "source_hidden": true
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
      ],
      "text/plain": [
       "Manipulate[PaneSelector[{1 -> -Graphics-, 2 -> -Graphics-, 3 -> -Graphics-, \n",
       " \n",
       ">     4 -> -Graphics-, 5 -> -Graphics-, 6 -> -Graphics-, 7 -> -Graphics-, \n",
       " \n",
       ">     8 -> -Graphics-, 9 -> -Graphics-, 10 -> -Graphics-, 11 -> -Graphics-, \n",
       " \n",
       ">     12 -> -Graphics-, 13 -> -Graphics-, 14 -> -Graphics-, 15 -> -Graphics-, \n",
       " \n",
       ">     16 -> -Graphics-, 17 -> -Graphics-, 18 -> -Graphics-, 19 -> -Graphics-, \n",
       " \n",
       ">     20 -> -Graphics-, 21 -> -Graphics-, 22 -> -Graphics-, 23 -> -Graphics-, \n",
       " \n",
       ">     24 -> -Graphics-, 25 -> -Graphics-}, Dynamic[i13], ImageSize -> All, \n",
       " \n",
       ">    Alignment -> Automatic, BaseStyle -> ListAnimateCore, \n",
       " \n",
       ">    TransitionDirection -> Horizontal, TransitionDuration -> 0.5, \n",
       " \n",
       ">    TransitionEffect -> Automatic], \n",
       " \n",
       ">   {{i13, 1, }, 1, 25, 1, AnimationRate -> Automatic, DisplayAllSteps -> True, \n",
       " \n",
       ">    AppearanceElements -> \n",
       " \n",
       ">     {ProgressSlider, PlayPauseButton, FasterSlowerButtons, DirectionButton}}, \n",
       " \n",
       ">   Paneled -> False, ControlType -> Animator, AppearanceElements -> None, \n",
       " \n",
       ">   DefaultBaseStyle -> ListAnimate, DefaultLabelStyle -> ListAnimateLabel, \n",
       " \n",
       ">   SynchronousUpdating -> True, Method -> \n",
       " \n",
       ">    {DynamicCore -> False, TemplateExpand -> True}, \n",
       " \n",
       ">   Bookmarks -> {min :> {i13 = 1}, max :> {i13 = 25}}]"
      ]
     },
     "execution_count": 18,
     "metadata": {
      "text/html": [],
      "text/plain": []
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ListAnimate[\n",
    "Table[\n",
    " visualizeDiatomicMoleculePlusPotentialLJ[\n",
    "  diatomicMoleculeSolutionsLJ[1/4^2, 1/4^2][[;; 2]], {1/8^2, \n",
    "   1/8^2}][t],\n",
    "   {t, Subdivide[0,0.22,25]//Rest}],\n",
    "Paneled -> False]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ec014ef1-3c02-42bb-908b-22c481156a17",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Wolfram Language 13.2",
   "language": "Wolfram Language",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": "mathematica",
   "file_extension": ".m",
   "mimetype": "application/vnd.wolfram.m",
   "name": "Wolfram Language",
   "pygments_lexer": "mathematica",
   "version": "12.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
